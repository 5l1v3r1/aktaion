/**
  * Copyright 2016 - Caspida Inc., All rights reserved.
  * This is Caspida proprietary and confidential material and its use
  * is subject to license terms.
  * Created on 7/2/16.
  *
  * @author joez
  */

package com.aktaion.ml.behaviors

class ExploitationTimingBehaviors extends MicroBehaviorSet {

  val tsTimeIntervalA = ExploitationMbNumeric("TimeIntervalA", "Difference in timestamp between event 1 and event 2")
  val tsTimeIntervalB = ExploitationMbNumeric("TimeIntervalB", "Difference in timestamp between event 2 and event 3")
  val tsTimeIntervalC = ExploitationMbNumeric("TimeIntervalC", "Difference in timestamp between event 3 and event 4")
  val tsTimeIntervalD = ExploitationMbNumeric("TimeIntervalD", "Difference in timestamp between event 4 and event 5")

  val behaviorVector = List(tsTimeIntervalA, tsTimeIntervalB, tsTimeIntervalC, tsTimeIntervalD)
}

class ExploitationURIBehaviors extends MicroBehaviorSet {
  val uriMaxPathDepth = ExploitationMbNumeric("MaxPathDepth", "Maximum Path Length in URI's")
  val uriMinPathDepth = ExploitationMbNumeric("MinPathDepth", "Minimum Path Length in URI's")

  val behaviorVector = List(uriMaxPathDepth)
}


class ExploitationMimeTypeBehaviors extends MicroBehaviorSet {
  val mimeTypeCnt = ExploitationMbNumeric("MimeTypeUniqueCnt", "Num of Unique ")
  val behaviorVector = List(mimeTypeCnt)

}


case class ExploitationMbNumeric(behaviorName: String,
                                 behaviorDescription: String,
                                 var behaviorNumData: Double = 0.0) extends MicroBehaviorNumeric

case class ExploitationMbCategorical(behaviorName: String,
                                     behaviorDescription: String,
                                     var behaviorNumData: Double = 0.0) extends MicroBehaviorNumeric



