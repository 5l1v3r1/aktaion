/**
  * Copyright 2016 - Caspida Inc., All rights reserved.
  * This is Caspida proprietary and confidential material and its use
  * is subject to license terms.
  * Created on 7/2/16.
  *
  * @author joez
  */

package com.aktaion.ml.behaviors

class ExploitationTimingBehaviors extends MicroBehaviorSet {

//  val tsTimeIntervalA = MicroBehaviorNumeric("TimeIntervalA", "Difference in timestamp between event 1 and event 2")
//  val tsTimeIntervalB = MicroBehaviorNumeric("TimeIntervalB", "Difference in timestamp between event 2 and event 3")
//  val tsTimeIntervalC = MicroBehaviorNumeric("TimeIntervalC", "Difference in timestamp between event 3 and event 4")
//  val tsTimeIntervalD = MicroBehaviorNumeric("TimeIntervalD", "Difference in timestamp between event 4 and event 5")

  val maxTimeIntervalA = MicroBehaviorData("TimeIntervalA", "Difference in timestamp between event 1 and event 2")
  val maxTimeIntervalB = MicroBehaviorData("TimeIntervalB", "Difference in timestamp between event 2 and event 3")
  val maxTimeIntervalC = MicroBehaviorData("TimeIntervalC", "Difference in timestamp between event 3 and event 4")
  val maxTimeIntervalD = MicroBehaviorData("TimeIntervalD", "Difference in timestamp between event 4 and event 5")

  val minTimeIntervalA = MicroBehaviorData("TimeIntervalA", "Difference in timestamp between event 1 and event 2")
  val minTimeIntervalB = MicroBehaviorData("TimeIntervalB", "Difference in timestamp between event 2 and event 3")
  val minTimeIntervalC = MicroBehaviorData("TimeIntervalC", "Difference in timestamp between event 3 and event 4")
  val minTimeIntervalD = MicroBehaviorData("TimeIntervalD", "Difference in timestamp between event 4 and event 5")

  val behaviorVector = List(maxTimeIntervalA, maxTimeIntervalB, maxTimeIntervalC, maxTimeIntervalD)
}

class ExploitationURIBehaviors extends MicroBehaviorSet {
  val uriMaxPathDepth = MicroBehaviorData("MaxPathDepth", "Maximum Path Length in URI's")
  val uriMinPathDepth = MicroBehaviorData("MinPathDepth", "Minimum Path Length in URI's")

  val behaviorVector = List(uriMaxPathDepth)
}


class ExploitationMimeTypeBehaviors extends MicroBehaviorSet {
  val mimeTypeCnt = MicroBehaviorData("MimeTypeUniqueCnt", "Num of Unique ")
  val behaviorVector = List(mimeTypeCnt)

}





